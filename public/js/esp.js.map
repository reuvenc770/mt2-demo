{"version":3,"sources":["app.js","GenericTableDirective.js","EditButtonDirective.js","EspController.js","EspApiService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"esp.js","sourcesContent":["/**\n * MT2 App Module\n */\nvar mt2App = angular.module( 'mt2App' , [] );\n\nmt2App.config( function ( $locationProvider ) {\n    $locationProvider.html5Mode( true );\n} );\n","mt2App.directive( 'genericTable' , function () {\n    return {\n        \"scope\" : {} ,\n        \"controller\" : function () {} ,\n        \"controllerAs\" : \"ctrl\" , \n        \"bindToController\" : { \n            \"headers\" : \"=\" ,\n            \"records\" : \"=\" ,\n            \"editurl\" : \"=\"\n        } ,\n        \"templateUrl\" : \"js/templates/generic-table.html\"\n    };\n} );\n","mt2App.directive( 'editButton' , [ '$window' , '$location' , function ( $window , $location ) {\n    return {\n        \"scope\" : {} ,\n        \"controller\" : function () {} ,\n        \"controllerAs\" : \"ctrl\" ,\n        \"bindToController\" : {\n            \"editurl\" : \"=\" ,\n            \"recordid\" : \"=\"\n        } ,\n        \"templateUrl\" : \"js/templates/edit-button.html\" ,\n        \"link\" : function ( scope , element , attrs )  {\n            if ( typeof( scope.ctrl ) != 'undefined' ) {\n                element.on( 'click' , function () {\n                    var fullEditUrl = scope.ctrl.editurl + scope.ctrl.recordid;\n                    $location.url( fullEditUrl );\n                    $window.location.href = fullEditUrl;\n                } );\n            }\n        }\n    };\n} ] );\n","mt2App.controller( 'espController' , [ '$log' , '$window' , '$location' , '$timeout' , 'EspApiService' , function ( $log , $window , $location , $timeout , EspApiService ) {\n    var self = this;\n    self.$location = $location;\n\n    self.headers = [ '' , 'ID' , 'ESP' , 'Account' , 'Created' , 'Updated' ];\n    self.accounts = [];\n\n    self.currentAccount = { \"espId\" : \"\" , \"id\" : \"\" , \"accountName\" : \"\" , \"key1\" : \"\" , \"key2\" : \"\" };\n\n    self.createUrl = 'esp/create/';\n    self.editUrl = 'esp/edit/';\n\n    self.formErrors = { \"espId\" : \"\" , \"id\" : \"\" , \"accountName\" : \"\" , \"key1\" : \"\" , \"key2\" : \"\" };\n\n    self.loadAccount = function () {\n        var pathMatches = $location.path().match( /^\\/espapi\\/edit\\/(\\d{1,})/ );\n\n        EspApiService.getAccount( pathMatches[ 1 ] , function ( response ) {\n            self.currentAccount.id = response.data.id;\n            self.currentAccount.accountName = response.data.account_name;\n            self.currentAccount.key1 = response.data.key_1;\n            self.currentAccount.key2 = response.data.key_2;\n        } )\n    }\n\n    self.loadAccounts = function () {\n        EspApiService.getAccounts( self.loadAccountsSuccessCallback , self.loadAccountsFailureCallback );\n    };\n\n    self.resetCurrentAccount = function () {\n        self.currentAccount.espId = '';\n        self.currentAccount.id = '';\n        self.currentAccount.accountName = '';\n        self.currentAccount.key1 = '';\n        self.currentAccount.key2 = '';\n    };\n\n    /**\n     * Click Handlers\n     */\n    self.viewAdd = function () {\n        $location.url( self.createUrl );\n        $window.location.href = self.createUrl;\n    };\n\n    self.saveNewAccount = function () {\n        self.resetFieldErrors();\n\n        EspApiService.saveNewAccount( self.currentAccount , self.saveNewAccountSuccessCallback , self.saveNewAccountFailureCallback );\n    };\n\n    self.editAccount = function () {\n        self.resetFieldErrors();\n\n        EspApiService.editAccount( self.currentAccount , self.editAccountSuccessCallback , self.editAccountFailureCallback );\n    }\n\n    /**\n     * Callbacks\n     */\n    self.loadAccountsSuccessCallback = function ( response ) {\n        self.accounts = response.data;\n    };\n\n    self.loadAccountsFailureCallback = function ( response ) {\n        self.setModalLabel( 'Error' );\n        self.setModalBody( 'Failed to load ESP Accounts.' );\n\n        self.launchModal();\n    }\n\n    self.saveNewAccountSuccessCallback = function ( response ) {\n        self.setModalLabel( 'Success' );\n        self.setModalBody( 'Successfully saved ESP Account.' );\n\n        self.resetCurrentAccount();\n\n        self.launchModal();\n    };\n\n    self.saveNewAccountFailureCallback = function ( response ) {\n        self.loadFieldErrors( 'espId' , response );\n        self.loadFieldErrors( 'accountName' , response );\n        self.loadFieldErrors( 'key1' , response );\n        self.loadFieldErrors( 'key2' , response );\n    };\n\n    self.editAccountSuccessCallback = function ( response ) {\n        self.setModalLabel( 'Success' );\n        self.setModalBody( 'Successfully updated ESP Account.' );\n\n        self.launchModal();\n    };\n\n    self.editAccountFailureCallback = function ( response ) {\n        self.loadFieldErrors( 'accountName' , response );\n        self.loadFieldErrors( 'key1' , response );\n        self.loadFieldErrors( 'key2' , response );\n    };\n\n    /**\n     * Page Modal\n     */\n\n    self.setModalLabel = function ( labelText ) {\n        var modalLabel = angular.element( document.querySelector( '#pageModalLabel' ) );\n\n        modalLabel.text( labelText );\n    };\n\n    self.setModalBody = function ( bodyText ) {\n        var modalBody = angular.element( document.querySelector( '#pageModalBody' ) );\n\n        modalBody.text( bodyText );\n    }\n\n    self.launchModal = function () {\n        $( '#pageModal' ).modal('show');\n    };\n\n    self.resetModal = function () {\n        self.setModalLabel( '' );\n        self.setModalBody( '' );\n\n        $( '#pageModal' ).modal('hide');\n    };\n\n    /**\n     * Errors\n     */\n    self.loadFieldErrors = function ( field , response ) {\n        if ( typeof( response.data[ field ] ) != 'undefined' ) {\n            self.setFieldError( field , response.data[ field ].join( ' ' ) );\n        }\n    }\n\n    self.setFieldError = function ( field , errorMessage ) {\n        self.formErrors[ field ] = errorMessage;\n    }\n\n    self.resetFieldErrors = function () {\n        self.setFieldError( 'espId' , '' ); \n        self.setFieldError( 'accountName' , '' ); \n        self.setFieldError( 'key1' , '' );\n        self.setFieldError( 'key2' , '' );\n    };\n} ] );\n","mt2App.service( 'EspApiService' , function ( $http , $log ) {\n    var self = this;\n\n    self.baseApiUrl = '/api/esp';\n\n    self.getAccount = function ( id , successCallback ) {\n        $http( { \"method\" : \"GET\" , \"url\" : this.baseApiUrl + '/' + id } )\n            .then( successCallback );\n    }\n\n    self.getAccounts = function ( successCallback , failureCallback ) {\n        $http( { \"method\" : \"GET\" , \"url\" : this.baseApiUrl } )\n            .then( successCallback , failureCallback );\n    }\n\n    self.saveNewAccount = function ( newAccount , successCallback , failureCallback ) {\n        $http( {\n            \"method\" : \"POST\" ,\n            \"url\" : this.baseApiUrl ,\n            \"data\" : newAccount\n        } ).then( successCallback , failureCallback );\n    }\n\n    self.editAccount = function ( account , successCallback , failureCallback  ) {\n        var request = account;\n\n        request[ '_method' ] = 'PUT';\n\n        $http( {\n            \"method\" : \"PUT\" ,\n            \"url\" : this.baseApiUrl + '/' + account.id ,\n            \"data\" : request\n        } ).then( successCallback , failureCallback );\n    }\n} );\n"],"sourceRoot":"/source/"}