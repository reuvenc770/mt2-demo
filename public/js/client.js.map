{"version":3,"sources":["ClientController.js","ClientApiService.js","ClientTableDirective.js"],"names":[],"mappingspIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"client.js","sourcesContent":["mt2App.controller( 'ClientController' , [ '$rootScope' , '$log' , '$window' , '$location' , 'ClientApiService' , function ( $rootScope , $log , $window , $location , ClientApiService ) {\n    var self = this;\n\n    self.current = {};\n    self.clients = [];\n\n    self.createUrl = '/client/create';\n\n    self.pageCount = 0;\n    self.paginationCount = '10';\n    self.currentPage = 1;\n\n    self.currentlyLoading = 0;\n\n    $rootScope.$on( 'updatePage' , function () {\n        self.loadClients();\n    } );\n\n    self.loadClient = function () {\n        var currentPath = $location.path();\n        var matches = currentPath.match( /\\/(\\d{1,})/ );\n        var id = matches[ 1 ]; \n\n        ClientApiService.getClient( id , self.loadClientSuccessCallback , self.loadClientSuccessCallback );\n    };\n\n    self.loadClients = function () {\n        self.currentlyLoading = 1;\n\n        ClientApiService.getClients( self.currentPage , self.paginationCount , self.loadClientsSuccessCallback , self.loadClientsFailureCallback );\n    };\n\n    self.updateClient = function () {\n        ClientApiService.updateClient( self.current , self.updateClientSuccessCallback , self.updateClientFailureCallback )\n    };\n\n    self.saveClient = function () {\n        ClientApiService.saveClient( self.current , self.saveClientSuccessCallback , self.saveClientFailureCallback )\n    };\n\n    self.viewAdd = function () {\n        $location.url( self.createUrl );\n        $window.location.href = self.createUrl;\n    };\n\n    /**\n     * Page Modal\n     */\n\n    self.setModalLabel = function ( labelText ) {\n        var modalLabel = angular.element( document.querySelector( '#pageModalLabel' ) );\n\n        modalLabel.text( labelText );\n    };\n\n    self.setModalBody = function ( bodyText ) {\n        var modalBody = angular.element( document.querySelector( '#pageModalBody' ) );\n\n        modalBody.text( bodyText );\n    }\n\n    self.launchModal = function () {\n        $( '#pageModal' ).modal('show');\n    };\n\n    self.resetModal = function () {\n        self.setModalLabel( '' );\n        self.setModalBody( '' );\n\n        $( '#pageModal' ).modal('hide');\n    };\n\n    /**\n     * Callbacks\n     */\n    self.loadClientSuccessCallback = function ( response ) {\n        var currentRecord = response.data[ 0 ];\n        currentRecord[ 'list_owner' ] = currentRecord[ 'list_owner' ].toLowerCase();\n\n        self.current = currentRecord;\n    };\n\n    self.loadClientFailureCallback = function ( response ) {\n        self.setModalLabel( 'Error' );\n        self.setModalBody( 'Failed to load client.' );\n\n        self.launchModal();\n    };\n\n    self.loadClientsSuccessCallback = function ( response ) {\n        self.clients = response.data.records;\n\n        self.pageCount = response.data.pageCount;\n\n        self.currentlyLoading = 0;\n    };\n\n    self.loadClientsFailureCallback = function ( response ) {\n        self.setModalLabel( 'Error' );\n        self.setModalBody( 'Failed to load clients.' );\n\n        self.launchModal();\n    };\n\n    self.updateClientSuccessCallback = function () {\n        self.setModalLabel( 'Update Client' );\n        self.setModalBody( 'Successfully updated client.' );\n\n        self.launchModal();\n    };\n    \n    self.updateClientFailureCallback = function () {\n        self.setModalLabel( 'Error' );\n        self.setModalBody( 'Failed to update client.' );\n\n        self.launchModal();\n    };\n\n    self.saveClientSuccessCallback = function () {\n        self.setModalLabel( 'Add Client' );\n        self.setModalBody( 'Successfully added new client.' );\n\n        self.launchModal();\n    };\n    \n    self.saveClientFailureCallback = function () {\n        self.setModalLabel( 'Error' );\n        self.setModalBody( 'Failed to save new client.' );\n\n        self.launchModal();\n    };\n} ] );\n","mt2App.service( 'ClientApiService' , function ( $http , $log ) {\n    var self = this;\n\n    self.baseApiUrl = '/api/client';\n\n    self.getClient = function ( id , successCallback , failureCallback ) {\n        $http( { \"method\" : \"GET\" , \"url\" : this.baseApiUrl + '/' + id } )\n            .then( successCallback , failureCallback );\n    };\n\n    self.getClients = function ( page , count , successCallback , failureCallback ) {\n        $http( { \"method\" : \"GET\" , \"url\" : this.baseApiUrl + '/pager' , \"params\" : { \"page\" : page , \"count\" : count } } )\n            .then( successCallback , failureCallback );\n    };\n\n    self.saveClient = function ( clientData , successCallback , failureCallback ) {\n        $http( { \"method\" : \"POST\" , \"url\" : this.baseApiUrl , \"data\" : clientData } )\n            .then( successCallback , failureCallback );\n    };\n\n    self.updateClient = function ( clientData , successCallback , failureCallback ) {\n        $http( {\n            \"method\" : \"PUT\" ,\n            \"url\" : this.baseApiUrl + '/' + clientData.client_id ,\n            \"params\" : { \"_method\" : \"PUT\" } ,\n            \"data\" : clientData\n        } ).then( successCallback , failureCallback );\n    };\n} );\n","mt2App.directive( 'clientTable' , function () {\n    return {\n        \"scope\" : {} ,\n        \"controller\" : function () {} ,\n        \"controllerAs\" : \"ctrl\" ,\n        \"bindToController\" : {\n            \"records\" : \"=\" ,\n            \"loadingflag\" : \"=\"\n        } ,\n        \"templateUrl\" : \"js/templates/client-table.html\"\n    };\n} );\n"],"sourceRoot":"/source/"}
