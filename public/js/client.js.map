{"version":3,"sources":["app.js","GenericTableDirective.js","EditButtonDirective.js","ClientController.js","ClientApiService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"client.js","sourcesContent":["/**\n * MT2 App Module\n */\nvar mt2App = angular.module( 'mt2App' , [] );\n\nmt2App.config( function ( $locationProvider ) {\n    $locationProvider.html5Mode( true );\n} );\n","mt2App.directive( 'genericTable' , function () {\n    return {\n        \"scope\" : {} ,\n        \"controller\" : function () {} ,\n        \"controllerAs\" : \"ctrl\" , \n        \"bindToController\" : { \n            \"headers\" : \"=\" ,\n            \"records\" : \"=\" ,\n            \"editurl\" : \"=\"\n        } ,\n        \"templateUrl\" : \"js/templates/generic-table.html\"\n    };\n} );\n","mt2App.directive( 'editButton' , [ '$window' , '$location' , function ( $window , $location ) {\n    return {\n        \"scope\" : {} ,\n        \"controller\" : function () {} ,\n        \"controllerAs\" : \"ctrl\" ,\n        \"bindToController\" : {\n            \"editurl\" : \"=\" ,\n            \"recordid\" : \"=\"\n        } ,\n        \"templateUrl\" : \"js/templates/edit-button.html\" ,\n        \"link\" : function ( scope , element , attrs )  {\n            if ( typeof( scope.ctrl ) != 'undefined' ) {\n                element.on( 'click' , function () {\n                    var fullEditUrl = scope.ctrl.editurl + scope.ctrl.recordid;\n                    $location.url( fullEditUrl );\n                    $window.location.href = fullEditUrl;\n                } );\n            }\n        }\n    };\n} ] );\n","mt2App.controller( 'ClientController' , [ '$log' , '$window' , '$location' , 'ClientApiService' , function ( $log , $window , $location , ClientApiService ) {\n    var self = this;\n\n    self.clients = [];\n\n    self.createUrl = 'client/create/';\n    self.editUrl = 'client/edit/';\n\n    self.headers = [ '' , 'ID' , 'Name' , 'Status' , 'Type' , 'Sub-Affiliate ID' , 'Source URL' , 'Owner' , 'Owner Type' , 'Username' , 'Email' , 'Phone' , 'Address' , 'Country' ];\n\n    self.loadClients = function () {\n        ClientApiService.getClients( self.loadClientsSuccessCallback , self.loadAccountsFailureCallback );\n    };\n\n    self.loadClientsSuccessCallback = function ( response ) {\n        self.clients = response.data;\n    };\n\n    self.loadAccountsFailureCallback = function ( response ) {\n        self.setModalLabel( 'Error' );\n        self.setModalBody( 'Failed to load ESP Accounts.' );\n\n        self.launchModal();\n    };\n\n    self.viewAdd = function () {\n        $location.url( self.createUrl );\n        $window.location.href = self.createUrl;\n    };\n\n    /**\n     * Page Modal\n     */\n\n    self.setModalLabel = function ( labelText ) {\n        var modalLabel = angular.element( document.querySelector( '#pageModalLabel' ) );\n\n        modalLabel.text( labelText );\n    };\n\n    self.setModalBody = function ( bodyText ) {\n        var modalBody = angular.element( document.querySelector( '#pageModalBody' ) );\n\n        modalBody.text( bodyText );\n    }\n\n    self.launchModal = function () {\n        $( '#pageModal' ).modal('show');\n    };\n\n    self.resetModal = function () {\n        self.setModalLabel( '' );\n        self.setModalBody( '' );\n\n        $( '#pageModal' ).modal('hide');\n    };\n} ] );\n","mt2App.service( 'ClientApiService' , function ( $http , $log ) {\n    var self = this;\n\n    self.baseApiUrl = '/api/client';\n\n    self.getClients = function ( successCallback , failureCallback ) {\n        $http( { \"method\" : \"GET\" , \"url\" : this.baseApiUrl } )\n            .then( successCallback , failureCallback );\n    }\n} );\n"],"sourceRoot":"/source/"}