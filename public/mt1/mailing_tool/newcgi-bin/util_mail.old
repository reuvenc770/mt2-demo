################################################################
####   util_mail.pm  - utility package for PMS that handles	 ####
####				  mailing and previewing of mail         ####
#################################################################

package util_mail;

use strict;
use vars '$AUTOLOAD';
use CGI;
use util;
use HTML::LinkExtor;
use WWW::Curl::easy;
use URI::Split qw(uri_split uri_join);
use File::Basename;
my $util;
my $global_dbh;
my $global_text;
my $global_added;
my $BASE_DIR;
my $dname;
my $subdomain_name;
my $city;
my $state;
my $zip;
my $fdomain;
my $img_cnt;
my @user_arr = (
    ["",""],
    ["xlmx.com","xlmx.com"],
    ["Magneticmix.com","magneticmix.com"],
    ["OpenGains.com","opengains.com"],
    ["xlmx.com","xlmx.com"]
);

sub initialize 
{
	my $self = shift;
}

sub AUTOLOAD
{
	my ($self) = @_;
	$AUTOLOAD =~ /.*::get(_\w+)/;
	exists $self->{$1};
	return $self->{$1}	# return attribute
}

sub new 
{
	my $this = shift;
	my $class = ref($this) || $this;
	my $self = {};
	bless $self, $class;
	$self->initialize();
	return $self;
}

sub clean_up
{
	my $self = shift;
	exit(0);
}

# **********************************************************************************
#	This routine is used for previewing an email
# **********************************************************************************

sub mail_preview
{
	my ($dbh,$camp_id,$format,$email_addr,$email_user_id,$user_id,$footer_color,$aid,$internal_flag,$unsub_url,$unsub_img,$content_id,$subname) = @_;
	unless (defined $util)
	{
		$util = util->new; 
	}

	my $sth1;
	my $sql;
	my $template_text;
	my $html_template;
	my $text_template;
	my $aol_template;
	my $new_text;
	my $new_text1;

	# Get the text for this campaign
	$global_dbh = $dbh;
		
	$sql = "select html_code from creative where creative_id=$camp_id";
	$sth1 = $dbh->prepare($sql);
	$sth1->execute();
	($html_template) = $sth1->fetchrow_array();
	$sth1->finish();

	# Select template to use based on format user can accept
	$template_text = $html_template;
	
	# Call routine to get the campaigns info and do all the substitution in the template
	# it returns the template text with the fields substitutied with the data
						
	$new_text = template_substit($dbh,$camp_id,$email_addr,$template_text,$format,$email_user_id,$new_text1,$user_id,$footer_color,$aid,$internal_flag,$unsub_url,$unsub_img,$content_id,$subname);

	return ($new_text);
}

# *************************************************************************************
# sub mail_sendtest
# This routine is used for sending a single test email or a "Tell a Friend" email
# *************************************************************************************

sub mail_sendtest
{
	my ($dbh,$camp_id,$cemail,$email_type,$friend_email_user_id,$user_id) = @_;

	unless (defined $util)
	{
		$util = util->new; 
	}
	my $sth;
	my $sql;
	my $subject;
	my $from_addr;
	my $email_mgr_addr;
	my $email_user_id;
	my $rows;
	my $errmsg;
	my $footer_color;
	my $aid;
	my $internal_flag;
	my $unsub_url;
	my $unsub_img;
	my $content_id;
	my $subname;

	# lookup the system mail address

	$sql = "select parmval from sysparm where parmkey = 'SYSTEM_MGR_ADDR'";
	$sth = $dbh->prepare($sql);
	$sth->execute();
	($email_mgr_addr) = $sth->fetchrow_array();
	$sth->finish();

	# default the email_type flag to HTML if it is blank

	if ($email_type eq "") 
	{
		$email_type = "H";
	}

	# lookup this email address to get this person's id.  Add them if they don't exist
	# in the email_user table

	$email_user_id = 0;

	# Get the mail information for the campaign being used

	$sql = "select default_subject,default_from,creative.advertiser_id,track_internally,unsub_link,unsub_image from creative,advertiser_info where creative_id=$camp_id and creative.advertiser_id=advertiser_info.advertiser_id";
	$sth = $dbh->prepare($sql);
	$sth->execute();
	if (($subject,$from_addr,$footer_color,$aid,$internal_flag,$unsub_url,$unsub_img) = $sth->fetchrow_array())
	{
		$sth->finish();

		# get the mail template and replace with data for this campaign
		my $the_email = mail_preview($dbh,$camp_id,$email_type,$cemail,$email_user_id,$user_id,$footer_color,$aid,$internal_flag,$unsub_url,$unsub_img,$content_id,$subname);
		if ($internal_flag eq "Y")
		{
			$unsub_url = "http://$subdomain_name/cgi-bin/adv_unsub.cgi?id=$aid&email_addr={{EMAIL_ADDR}}";
		}
		
		open (MAIL,"| /usr/sbin/sendmail -t");
		$from_addr =~ s/{{DOMAIN}}/$dname/;
        $from_addr =~ s/{{LOC}}/your area/;
		my $sth1;
        $sql = "select domain_name from category_info,campaign where campaign.category_id=category_info.category_id and campaign_id=$camp_id";
        $sth1 = $dbh->prepare($sql);
        $sth1->execute();
        ($fdomain) = $sth1->fetchrow_array();
        $sth1->finish();
        my $fsubdomain;
        my $rest_str;
        ($fsubdomain,$rest_str) = split '\.',$fdomain;
        $from_addr =~ s/{{FOOTER_SUBDOMAIN}}/$fsubdomain/;
		$_ = $from_addr;
		if (/@/)
		{
 			print MAIL "From: $from_addr\n";
		}
		else
		{
			my $temp_from = $from_addr;
			$temp_from =~ s/ //g;
 			print MAIL "From: $from_addr <$temp_from\@$fsubdomain.$dname>\n";
		}
   		print MAIL "To: $cemail\n";
		$subject =~ s/{{EMAIL_ADDR}}/$cemail/;
		$subject =~ s/{{DOMAIN}}/$dname/;
		$subject =~ s/{{SUB_DOMAIN}}/$subdomain_name/;
		$subject =~ s/{{NAME}}/$cemail/;
        $subject =~ s/{{LOC}}/your area/;
        $subject =~ s/{{ZIP}}/your area/;
        $subject =~ s/{{FULLNAME}}/$cemail/;
   		print MAIL "Reply-To: mdimaio\@spirevision.com\n";
   		print MAIL "Subject: [TEST] $subject\n";
		my $date_str = $util->date(6,6);
		print MAIL "Date: $date_str\n";
		print MAIL "X-Email: $cemail:$camp_id:\n";
		
		# add header for mail type

		if ($email_type eq "H" || $email_type eq "A")
		{
			# Add special header for HTML e-mail
			print MAIL "Mime-Version: 1.0\n";
    		print MAIL "Content-Type: text/html; charset=us-ascii\n\n";
		}
		elsif (($email_type eq "T") || ($email_type eq "D"))
		{
			# Add special header for text e-mail
        print MAIL "Content-Type: text/plain; charset=\"iso-8859-1\"\n\n";
		}

		# print out the mail body

		open (LOG,"> /tmp/a.a");
		print LOG $the_email;
		close LOG;
		print MAIL $the_email;

		close MAIL;
	}
	else
	{
		$sth->finish();
	}
}

# *************************************************************************************
# sub template_substit()
# this routine builds the body of an email, by looking up all the campaigns values
# and reading the campaigns template and substituting all the fields.
# *************************************************************************************

sub template_substit()
{
	my ($dbh,$camp_id,$email_addr,$template_text,$format,$email_user_id,$new_text1,$user_id,$footer_color,$aid,$internal_flag,$unsub_url,$unsub_img,$content_id,$subname) = @_;
	my $EDEALSDIRECT_USER = 33;
	my $sql;
	my $sth1;
	my $sth2;
	my $tracking_str;
	my $image_url;
	my $title;
	my $subtitle;
	my $date_str;
	my $greeting;
	my $introduction;
	my $closing;
	my $promotion_name;
	my $promotion_desc;
	my $promotion_image_url;
	my $promotion_link;
	my $promotion_link_name;
	my $contact_name;
	my $contact_email;
	my $contact_url;
	my $contact_phone; 
	my $contact_company; 
	my $show_ad_top;
	my $show_ad_bottom;
	my $show_popup;
	my $first_name;
	my $last_name;
	my $address;
	my $address2;
	my $city;
	my $state;
	my $zip;
	my $phone;
	my $country;
	my $birth_date;
	my $gender;
	my $tell_a_friend;
	my $bin_dir_http;
	my $ads_url;
	my $top_ad_opt;
	my $top_ad_code;
	my $bottom_ad_opt;
	my $bottom_ad_code;
	my $client_id;
	my $email_footer;
	my $hidden_text;
	my $timestr;
	my $curtime;
	my $physical_addr;
	my $temp_str;
	my $link_id;
	my $refurl;
	my $content_str;

    use URI::Escape;

	# find some system parameters

	$sql = "select parmval from sysparm where parmkey = 'BIN_DIR_HTTP'";
	$sth2 = $dbh->prepare($sql);
	$sth2->execute();
	($bin_dir_http) = $sth2->fetchrow_array();
	$sth2->finish();

#	$sql = "select parmval from sysparm where parmkey = 'ADS_URL'";
#	$sth2 = $dbh->prepare($sql);
#	$sth2->execute();
#	($ads_url) = $sth2->fetchrow_array();
#	$sth2->finish();

	# If tracking in text then replace with correct information
	
	$_ = $template_text;
    $template_text =~ s/{{CID}}/$camp_id/g;
	if (/{{TRACKING}}/)
	{
		$tracking_str = "<IMG SRC=\"http://{{IMG_DOMAIN}}/cgi-bin/open_email.cgi?id=$email_user_id&cid=$camp_id\" border=0 height=1 width=1>\n";
		$template_text =~ s/{{TRACKING}}/$tracking_str/g;
	}
	#
	# Check for CONTENT_HEADER tag
	#
	$content_str = "";
	$_ = $template_text;
	if ((/{{CONTENT_HEADER}}/) && ($content_id >= 2))
	{
		if ($content_id == 2)
		{
			$content_str = "<center><table cellSpacing=\"0\" cellPadding=\"0\" width=\"600\" border=\"0\" id=\"table37\"><tr style=\"BACKGROUND-COLOR: #668099\" bgColor=\"#668099\"><td style=\"TEXT-ALIGN: left\" vAlign=\"top\" width=\"20\"><img height=\"15\" src=\"images/spacer.gif\" width=\"5\" border=\"0\"></td><td style=\"PADDING-LEFT: 5px; TEXT-ALIGN: center\" width=\"100%\"><font face=\"Verdana\" color=\"#FFFFFF\"><span style=\"FONT-FAMILY: Arial; font-weight:700\">Daily Horoscopes</span></font></td><td style=\"TEXT-ALIGN: right\" vAlign=\"top\" width=\"20\"><img height=\"20\" alt=\")\" src=\"http://www.{{IMG_DOMAIN}}/images/templates/diag_corner_tr.gif\" width=\"20\" border=\"0\"></td></tr></table><table style=\"BACKGROUND-COLOR: #668099\" cellSpacing=\"2\" cellPadding=\"0\" width=\"600\" bgColor=\"#668099\" border=\"0\" id=\"table38\"><tr><td style=\"BACKGROUND-COLOR: #99cccc\" bgColor=\"#99cccc\">&nbsp;</td></tr><tr style=\"BACKGROUND-COLOR: #ffffff\" bgColor=\"#ffffff\"><td style=\"PADDING-LEFT: 5px\" vAlign=\"top\" align=\"left\"><font face=\"Arial\" size=\"2\"><br>For centuries, horoscopes and astrology have been used to help guide us and better understand who we are. Our horoscopes cover many areas including love, friendships, and business. <br><br><b>Check out your daily horoscope below.</b></font></td></tr><tr><td style=\"BACKGROUND-COLOR: #ffffff\" vAlign=\"top\" align=\"left\" bgColor=\"#ffffff\"></td></tr></table><table cellSpacing=\"0\" cellPadding=\"0\" width=\"600\" border=\"0\" id=\"table40\"><tr style=\"BACKGROUND-COLOR: #668099\" bgColor=\"#668099\"><td style=\"TEXT-ALIGN: left\" vAlign=\"bottom\"><img height=\"20\" src=\"http://www.{{IMG_DOMAIN}}/images/templates/diag_corner_bl.gif\" width=\"20\" border=\"0\"></td><td style=\"TEXT-ALIGN: right\" vAlign=\"bottom\"><img height=\"20\" src=\"http://www.{{IMG_DOMAIN}}/images/templates/diag_corner_br.gif\" width=\"20\" border=\"0\"></td></tr></table><font face=\"Arial\" color=\"#808080\"><b>Today's Offer</b></font>";
		}
		elsif ($content_id == 3)
		{
    		open(IN3,"</var/www/util/data/almanac_header.txt") || print "Error - could not open input file: /var/www/util/data/almanac_header.txt";
    		while (<IN3>)
    		{
				$content_str = $content_str . $_;
			}
			close(IN3);
			$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 4)
		{
    		open(IN3,"</var/www/util/data/topnews_header.txt") || print "Error - could not open input file: /var/www/util/data/topnews_header.txt";
    		while (<IN3>)
    		{
				$content_str = $content_str . $_;
			}
			close(IN3);
			$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 5)
		{
    		open(IN3,"</var/www/util/data/news_header.txt") || print "Error - could not open input file: /var/www/util/data/news_header.txt";
    		while (<IN3>)
    		{
				$content_str = $content_str . $_;
			}
			close(IN3);
			$content_str =~ s/&apos;/'/g;
		}
	}
	$template_text =~ s/{{CONTENT_HEADER}}/$content_str/g;
	#
	# Check for CONTENT_HEADER_TEXT tag
	#
	$content_str = "";
	$_ = $template_text;
	if ((/{{CONTENT_HEADER_TEXT}}/) && ($content_id >= 2))
	{
		if ($content_id == 2)
		{
			$content_str = "<center><table cellSpacing=\"0\" cellPadding=\"0\" width=\"600\" border=\"0\" id=\"table37\"><tr style=\"BACKGROUND-COLOR: #668099\" bgColor=\"#668099\"><td style=\"TEXT-ALIGN: left\" vAlign=\"top\" width=\"20\"><img height=\"15\" src=\"images/spacer.gif\" width=\"5\" border=\"0\"></td><td style=\"PADDING-LEFT: 5px; TEXT-ALIGN: center\" width=\"100%\"><font face=\"Verdana\" color=\"#FFFFFF\"><span style=\"FONT-FAMILY: Arial; font-weight:700\">Daily Horoscopes</span></font></td><td style=\"TEXT-ALIGN: right\" vAlign=\"top\" width=\"20\"><img height=\"20\" alt=\")\" src=\"http://www.{{IMG_DOMAIN}}/images/templates/diag_corner_tr.gif\" width=\"20\" border=\"0\"></td></tr></table><table style=\"BACKGROUND-COLOR: #668099\" cellSpacing=\"2\" cellPadding=\"0\" width=\"600\" bgColor=\"#668099\" border=\"0\" id=\"table38\"><tr><td style=\"BACKGROUND-COLOR: #99cccc\" bgColor=\"#99cccc\">&nbsp;</td></tr><tr style=\"BACKGROUND-COLOR: #ffffff\" bgColor=\"#ffffff\"><td style=\"PADDING-LEFT: 5px\" vAlign=\"top\" align=\"left\"><font face=\"Arial\" size=\"2\"><br>For centuries, horoscopes and astrology have been used to help guide us and better understand who we are. Our horoscopes cover many areas including love, friendships, and business. <br><br><b>Check out your daily horoscope below.</b></font><br><br><hr><center><b>Today's Offer</b></center>";
		}
		elsif ($content_id == 3)
		{
    		open(IN3,"</var/www/util/data/almanac_header_text.txt") || print "Error - could not open input file: /var/www/util/data/almanac_header_text.txt";
    		while (<IN3>)
    		{
				$content_str = $content_str . $_;
			}
			close(IN3);
			$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 4)
		{
    		open(IN3,"</var/www/util/data/topnews_header_text.txt") || print "Error - could not open input file: /var/www/util/data/topnews_header_text.txt";
    		while (<IN3>)
    		{
				$content_str = $content_str . $_;
			}
			close(IN3);
			$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 5)
		{
    		open(IN3,"</var/www/util/data/news_header_text.txt") || print "Error - could not open input file: /var/www/util/data/news_header_text.txt";
    		while (<IN3>)
    		{
				$content_str = $content_str . $_;
			}
			close(IN3);
			$content_str =~ s/&apos;/'/g;
		}
	}
	$template_text =~ s/{{CONTENT_HEADER_TEXT}}/$content_str/g;
	#
	# Check to see if content tag
	#
	$content_str = "";
	$_ = $template_text;
	$dname = "closest2free.com";
	if ((/{{CONTENT}}/) && ($content_id >= 2))
	{
		if ($content_id == 2)
		{
    		open(IN2,"</var/www/util/data/horoscope.txt") || print "Error - could not open input file: /var/www/util/data/horoscope.txt";
			$dname = "horoscopes365.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 3)
		{
    		open(IN2,"</var/www/util/data/almanac.txt") || print "Error - could not open input file: /var/www/util/data/almanac.txt";
			$dname = "todaysalmanac.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 4)
		{
    		open(IN2,"</var/www/util/data/topnews.txt") || print "Error - could not open input file: /var/www/util/data/topnews.txt";
			$dname = "entertainmentnewsclips.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 5)
		{
    		open(IN2,"</var/www/util/data/news.txt") || print "Error - could not open input file: /var/www/util/data/news.txt";
			$dname = "bizarreheadlines.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 6)
		{
			$dname="savingsalon.com";
		}	

	}
	$template_text =~ s/{{CONTENT}}/$content_str/g;
	#
	# Check to see if content_text tag
	#
	$content_str = "";
	$_ = $template_text;
	if ((/{{CONTENT_TEXT}}/) && ($content_id >= 2))
	{
		if ($content_id == 2)
		{
    		open(IN2,"</var/www/util/data/horoscope_text.txt") || print "Error - could not open input file: /var/www/util/data/horoscope_text.txt";
			$dname = "horoscopes365.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 3)
		{
    		open(IN2,"</var/www/util/data/almanac_text.txt") || print "Error - could not open input file: /var/www/util/data/almanac_text.txt";
			$dname = "todaysalmanac.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 4)
		{
    		open(IN2,"</var/www/util/data/topnews_text.txt") || print "Error - could not open input file: /var/www/util/data/topnews_text.txt";
			$dname = "entertainmentnewsclips.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 5)
		{
    		open(IN2,"</var/www/util/data/news_text.txt") || print "Error - could not open input file: /var/www/util/data/news_text.txt";
			$dname = "bizarreheadlines.com";
    	while (<IN2>)
    	{
			$content_str = $content_str . $_;
		}
		close(IN2);
		$content_str =~ s/&apos;/'/g;
		}
		elsif ($content_id == 6)
		{
			$dname="savingsalon.com";
		}	

	}
	srand(rand time());
	my @c=split(/ */, "bcdfghjklmnprstvwxyz");
	my @v=split(/ */, "aeiou");
	my $sname;
	$sname = $c[int(rand(20))];
	$sname = $sname . $v[int(rand(5))];
	$sname = $sname . $c[int(rand(20))];
	$sname = $sname . $v[int(rand(5))];
	$sname = $sname . $c[int(rand(20))];
	if ($subname eq "")
	{
		$subdomain_name = "www." . $dname;
	}
	else
	{
		$subdomain_name = $subname . "." . $dname;
	}
	$template_text =~ s/{{CONTENT_TEXT}}/$content_str/g;

	if (/{{HEADER_INFO}}/)
	{
		$tracking_str = "<i>This message is being brought to you by $dname.  If you are receiving this message in error, please see bottom of page.</i><p>";
		$template_text =~ s/{{HEADER_INFO}}/$tracking_str/g;
	}
	if (/{{REFID}}/)
	{
		$template_text =~ s/{{REFID}}/CV38950/g;
	}
	if (/{{TIMESTAMP}}/)
	{
		$timestr = util::date($curtime,5);
		$template_text =~ s/{{TIMESTAMP}}/$timestr/g;
	}
	
	$template_text =~ s/{{CLICK}}//g;

	$contact_url="http://www.$dname";
	$contact_email="offers\@$dname";
	$contact_name="$dname Offers";
	$contact_company="$dname";

		# Add special Unsubscribe footer to the bottom of every email - 
		# this is hard coded here because the users cannot remove this from the emails that
		# go out

		if ($format eq "H" or $format eq "A")
		{
			if ($format eq "H")
			{
				$hidden_text = "<html>
#<!-- " . $new_text1;
#				$hidden_text .= "
#-->";
				$template_text =~ s\<HTML>\<html>\;
#				$template_text =~ s\<html>\$hidden_text\;
			}
			# substitute end of page (closing body tag) with all the unsubscribe
			# footer stuff that must go on the bottom of every email, adding the
			# closing body tag back on
	
			$template_text =~ s\</BODY>\</body>\;
				if ($footer_color eq "WHITE")
				{
				$template_text =~ s\</body>\<p><HR width="90%" SIZE=1><p><center>
<table cellspacing=0 cellpadding=0 width=600 border=0>
<tr><td align=middle>
<font face="Verdana,Arial" size="1" color=white>
</font>
<br>
{{UNSUBSCRIBE}} 
</td></tr></table></center></p>\;
				}
				else
				{
				$template_text =~ s\</body>\<p><HR width="90%" SIZE=1><p><center>
<table cellspacing=0 cellpadding=0 width=600 border=0>
<tr><td align=middle>
<font face="Verdana,Arial" size="1">
</font>
<br>
{{UNSUBSCRIBE}} 
</td></tr></table></center></p>\;
				}
			$template_text =~ s\</HTML>\</html>\;
			$template_text =~ s\</html>\\;

			# add tell a friend box at the bottom if needed

			if ($tell_a_friend eq "Y")
			{
				$template_text .= qq { <p><center>
<table cellspacing=0 cellpadding=0 width=600 border=0>
<tr><td align=middle>
<font face="Verdana,Arial" size="1">
<form action="${bin_dir_http}tellfriend.cgi" method="post">
<input type="hidden" name="id" value="$email_user_id">
<input type="hidden" name="cid" value="$camp_id">
Send a copy of this email to a Friend
<input type="text" size="20" name="femail">
<input type="submit" value="Send"></form>
</td></tr></table>
</center></p>\n };

			}

			# get html email footer from sysparm table

			$sql = "select parmval from sysparm where parmkey = 'HTML_EMAIL_FOOTER'";
			$sth2 = $dbh->prepare($sql);
			$sth2->execute();
			($email_footer) = $sth2->fetchrow_array();
			$sth2->finish();

			# append the html email footer to the end of the email
			$template_text .= $email_footer;

			# now add end body tag to close the html email
			$template_text .= "</body></html>";

			#
			# Replace Re-directs
			#
				$global_added = 1;
				$global_text = $template_text;
				$img_cnt = 0;
				my $p = HTML::LinkExtor->new(\&cb); 
				$p->parse($template_text); 
				$template_text = $global_text;
				if ($global_added == 1)
				{
					$sql = "select parmval from sysparm where parmkey='BASE_DIR'";
					$sth1 = $global_dbh->prepare($sql);
					$sth1->execute();
					($BASE_DIR) = $sth1->fetchrow_array();
					$sth1->finish;
					open(FILE,"> ${BASE_DIR}logs/redir.dat") or die "can't open file: $!";
					$sql = "select link_id,refurl from links order by link_id";
					$sth1 = $global_dbh->prepare($sql);
					$sth1->execute();
					while (($link_id,$refurl) = $sth1->fetchrow_array())
					{
    					print FILE "$link_id|$refurl\n";
					}
					$sth1->finish();
					close(FILE);
					my @args = ("${BASE_DIR}cgi-bin/cp_redir.sh");
					system(@args) == 0 or die "system @args failed: $?";
				}
    		$template_text =~ s/{{CID}}/$camp_id/g;

			# replace unsubscribe field with the proper link

					$temp_str = "";
					if ($unsub_img eq "")
					{
						$sql = "select physical_addr from advertiser_info where advertiser_id=$aid"; 
						$sth2 = $dbh->prepare($sql);
						$sth2->execute();
						($physical_addr) = $sth2->fetchrow_array();
						$sth2->finish();
						$temp_str = "<font size=-2>To stop receiving email promotions from this ADVERTISER ONLY.<br><a href=\"$unsub_url\">FOLLOW THIS LINK</a> or contact the advertiser at: <br>$physical_addr</font><br><br>";
					}
					else
					{
						$temp_str = "<a href=\"$unsub_url\"><img src=\"http://www.{{IMG_DOMAIN}}/images/unsub/$unsub_img\" border=0></a><br><br>";
					}
				if ($footer_color eq "WHITE")
				{
                	$template_text =~ s\{{UNSUBSCRIBE}}\$temp_str<a href="http://{{FOOTER_DOMAIN}}/cgi-bin/unsubscr.cgi?email={{EMAIL_USER_ID}}&cid=$camp_id&em={{EMAIL_ADDR}}" target=_new><img src="http://www.{{IMG_DOMAIN}}/images/footer/{{FOOTER_DOMAIN}}_1.jpg" border=0 alt="If this image does not load and you would rather not receive these messages, simply reply to this e-mail"></a><br><a href="http://{{FOOTER_DOMAIN}}/cgi-bin/privacy.cgi" target=_new><img src="http://www.{{IMG_DOMAIN}}/images/footer/{{FOOTER_DOMAIN}}_2.jpg" border=0></a><br><font face=Arial size="2" color=blue>If you cannot view the images in this message, enable images in your browser.  To cancel your subscription, please <a href="http://{{FOOTER_DOMAIN}}/cgi-bin/unsubscr.cgi?email={{EMAIL_USER_ID}}&cid=$camp_id&em={{EMAIL_ADDR}}" target=_new>follow this link.</a></font>\g;
				}
				else
				{
                	$template_text =~ s\{{UNSUBSCRIBE}}\$temp_str<a href="http://{{FOOTER_DOMAIN}}/cgi-bin/unsubscr.cgi?email={{EMAIL_USER_ID}}&cid=$camp_id&em={{EMAIL_ADDR}}" target=_new><img src="http://www.{{IMG_DOMAIN}}/images/footer/{{FOOTER_DOMAIN}}_1.jpg" border=0 alt="If this image does not load and you would rather not receive these messages, simply reply to this e-mail"></a><br><a href="http://{{FOOTER_DOMAIN}}/cgi-bin/privacy.cgi" target=_new><img src="http://www.{{IMG_DOMAIN}}/images/footer/{{FOOTER_DOMAIN}}_2.jpg" border=0></a><br><font face=Arial size="2" color=blue>If you cannot view the images in this message, enable images in your browser.  To cancel your subscription, please <a href="http://{{FOOTER_DOMAIN}}/cgi-bin/unsubscr.cgi?email={{EMAIL_USER_ID}}&cid=$camp_id&em={{EMAIL_ADDR}}" target=_new>follow this link.</a></font>\g;
				}

			# substitute <br> for the carriage returns if displaying html page

			$introduction =~ s/\n/<br>/g;
			$closing =~ s/\n/<br>/g;
			$promotion_desc =~ s/\n/<br>/g;
		}
		else
		{
			# get text email footer from sysparm table

			$sql = "select parmval from sysparm where parmkey = 'TEXT_EMAIL_FOOTER'";
			$sth2 = $dbh->prepare($sql);
			$sth2->execute();
			($email_footer) = $sth2->fetchrow_array();
			$sth2->finish();

			# add unsubscribe footer for text emails
			if ($camp_id != 0) 
			{
					$template_text .= "--------------------------------------------------------------
This is an email promotion being sent to you by $dname. 
To stop all future mailings, follow the link below or send your email address to:
                 $dname
					350 Third Avenue #717
					New York, NY  10010
http://{{FOOTER_DOMAIN}}/cgi-bin/unsubscr.cgi?email=$email_user_id&cid=$camp_id&em={{EMAIL_ADDR}}";
					# append the text email footer from sysparms
					if ($aid != 1)
					{
						my $physical_addr;
						$sql = "select physical_addr from advertiser_info where advertiser_id=$aid"; 
						$sth2 = $dbh->prepare($sql);
						$sth2->execute();
						($physical_addr) = $sth2->fetchrow_array();
						$sth2->finish();
						$template_text .= "

To stop receiving email promotions from this ADVERTISER ONLY.
Follow the link below or contact the advertiser at:

$physical_addr
$unsub_url";
					}
					$template_text .= $email_footer;
			}
		}

		# contact fields

    	$template_text =~ s/{{CONTACT_EMAIL}}/$contact_email/g;
    	$template_text =~ s/{{CONTACT_URL}}/$contact_url/g;
#    	$template_text =~ s/{{CONTACT_PHONE}}/$contact_phone/g;
    	$template_text =~ s/{{CONTACT_NAME}}/$contact_name/g;
    	$template_text =~ s/{{CONTACT_COMPANY}}/$contact_company/g;

		# removed this field - not using any more
    	#$template_text =~ s\{{EDIT}}\<a href="${bin_dir_http}edit_member.cgi?email=$email_user_id">edit</a>\g;

		# personalization fields

		my $temp_id = rand();
    	$template_text =~ s/{{EMAIL_ADDR}}/$email_addr/g;
    	$template_text =~ s/{{DOMAIN}}/$dname/g;
    	$template_text =~ s/{{IMG_DOMAIN}}/affiliateimages.com/g;
        $sql = "select domain_name from client_category_info,advertiser_info where advertiser_info.category_id=client_category_info.category_id and advertiser_info.advertiser_id-$aid";
        $sth1 = $dbh->prepare($sql);
        $sth1->execute();
        ($fdomain) = $sth1->fetchrow_array();
        $sth1->finish();
		$fdomain =~ tr/A-Z/a-z/;
        $template_text =~ s/{{FOOTER_DOMAIN}}/$fdomain/g;
    	$template_text =~ s/{{SUB_DOMAIN}}/$subdomain_name/g;
    	$template_text =~ s/{{NAME}}/$email_addr/g;
        if ($zip eq "")
        {
            $zip = "your area";
        }
        $template_text =~ s/{{ZIP}}/$zip/g;
        $template_text =~ s/{{LOC}}/your area/g;
        $template_text =~ s/{{FULLNAME}}/$email_addr/g;
    	$template_text =~ s/{{EMAIL_USER_ID}}/$email_user_id/g;
    	$template_text =~ s/{{RAND_ID}}/$temp_id/g;
#    	$template_text =~ s/{{FIRSTNAME}}/$first_name/g;
#    	$template_text =~ s/{{LASTNAME}}/$last_name/g;
#    	$template_text =~ s/{{ADDRESS}}/$address/g;
#    	$template_text =~ s/{{ADDRESS2}}/$address2/g;
#    	$template_text =~ s/{{CITY}}/$city/g;
#    	$template_text =~ s/{{STATE}}/$state/g;
#    	$template_text =~ s/{{ZIP}}/$zip/g;
#    	$template_text =~ s/{{COUNTRY}}/$country/g;
#    	$template_text =~ s/{{PHONE}}/$phone/g;
#    	$template_text =~ s/{{BIRTH_DATE}}/$birth_date/g;
#    	$template_text =~ s/{{GENDER}}/$gender/g;

	    # Get the client id for this campaign

#    	$sql = "select user_id from campaign where campaign_id=$camp_id"; 
#    	$sth1 = $dbh->prepare($sql);
#    	$sth1->execute();
#    	($client_id) = $sth1->fetchrow_array();
#    	$sth1->finish();

		# Check to see if need to do Popup Ads
		$template_text =~ s\{{POPUP_AD}}\\g;

		# check if need to add ad banners

		$template_text =~ s\{{TOP_AD}}\\g;
		$template_text =~ s\{{BOTTOM_AD}}\\g;

		$tracking_str = "${bin_dir_http}redir.cgi?id=$email_user_id&cid=$camp_id&l=";

	return ($template_text);
}

sub repl_template()
{
	my ($dbh,$template_id,$user_id,$format) = @_;
	unless (defined $util)
	{
		$util = util->new; 
	}
	my $sql;
	my $sth;
	my $sth1;
	my $sth2;
	my $tracking_str;
	my $image_url;
	my $title;
	my $subtitle;
	my $date_str;
	my $greeting;
	my $introduction;
	my $closing;
	my $promotion_name;
	my $promotion_desc;
	my $promotion_image_url;
	my $promotion_link;
	my $promotion_link_name;
	my $contact_name;
	my $contact_email;
	my $contact_url;
	my $contact_phone; 
	my $contact_company; 
	my $show_ad_top;
	my $show_ad_bottom;
	my $first_name;
	my $last_name;
	my $bin_dir_http;
	my $top_ad_opt;
	my $top_ad_code;
	my $bottom_ad_opt;
	my $bottom_ad_code;
	my $template_text;
	my $email_addr;
	my ($company, $website_url, $company_phone);

	# find some system parameters

	$sql = "select parmval from sysparm where parmkey = 'BIN_DIR_HTTP'";
	$sth = $dbh->prepare($sql);
	$sth->execute();
	($bin_dir_http) = $sth->fetchrow_array();
	$sth->finish();

	# read the template

	$sql = "select ";
	if ($format eq "H")
	{
		$sql = $sql . "html_template ";
	}
	elsif ($format eq "T")
	{
		$sql = $sql . "text_template ";
	}
	elsif ($format eq "A")
	{
		$sql = $sql . "aol_template ";
	}
	$sql = $sql . "from template where template_id = $template_id";
	$sth = $dbh->prepare($sql);
	$sth->execute();
	($template_text) = $sth->fetchrow_array();
	$sth->finish();

	# read current users email address and other stuff

	$sql = "select first_name, last_name, email_addr, company, website_url,
		company_phone from user where user_id = $user_id";
	$sth = $dbh->prepare($sql);
	$sth->execute();
	($first_name, $last_name, $email_addr, $company, $website_url,
        $company_phone) = $sth->fetchrow_array();
	$sth->finish();

	# read defaults for this template

	if ($format ne "T")
	{
		# substitute <br> for the carriage returns if displaying html page
		$introduction =~ s/\n/<br>/g;
		$closing =~ s/\n/<br>/g;
		$promotion_desc =~ s/\n/<br>/g;
	}

	$template_text =~ s/{{TRACKING}}//g;
	$template_text =~ s/{{CONTENT}}//g;
	$template_text =~ s/{{CLICK}}//g;
	$template_text =~ s/{{TITLE}}/$title/g;
    $template_text =~ s/{{SUBTITLE}}/$subtitle/g;
    $template_text =~ s/{{DATE_STR}}/$date_str/g;
    $template_text =~ s/{{GREETING}}/$greeting/g;
    $template_text =~ s/{{INTRODUCTION}}/$introduction/g;
    $template_text =~ s/{{CLOSING}}/$closing/g;

    $template_text =~ s/{{CONTACT_EMAIL}}/$email_addr/g;
    $template_text =~ s/{{CONTACT_URL}}/$website_url/g;
    $template_text =~ s/{{CONTACT_PHONE}}/$company_phone/g;
    $template_text =~ s/{{CONTACT_NAME}}/$first_name $last_name/g;
    $template_text =~ s/{{CONTACT_COMPANY}}/$company/g;
    $template_text =~ s/{{EMAIL_ADDR}}/$email_addr/g;
    $template_text =~ s/{{NAME}}/$email_addr/g;
    if ($city ne "")
    {
        $template_text =~ s/{{LOC}}/$city $state/g;
    }
    elsif ($state ne "")
    {
        $template_text =~ s/{{LOC}}/$state/g;
    }
    else
    {
        $template_text =~ s/{{LOC}}/your area/g;
    }
    if ($zip eq "")
    {
        $zip = "your area";
    }
    $template_text =~ s/{{ZIP}}/$zip/g;
    $template_text =~ s/{{FULLNAME}}/$first_name $last_name/g;
	my $temp_id = rand();
   	$template_text =~ s/{{RAND_ID}}/$temp_id/g;
    $template_text =~ s/{{FIRSTNAME}}/$first_name/g;
    $template_text =~ s/{{LASTNAME}}/$last_name/g;
	$template_text =~ s\{{TOP_AD}}\\g;
	$template_text =~ s\{{BOTTOM_AD}}\\g;

	return ($template_text);
}
sub cb 
{
     my($tag, $url1, $url2, %links) = @_;
my ($scheme, $auth, $path, $query, $frag);
my $name;
my $suffix;
	my $temp_id;
	my $sql;
	my $sth1;
	my $link_id;
	my $temp_name;
	my $temp_str;
	 if ((($tag eq "a") && ($url1 eq "href")) || (($tag eq "area") && ($url1 eq "href")))
	 {
		$_ = $url2;
		if (/{{SUB_DOMAIN}}/)
		{
			$temp_id = 0;
		}
		else
		{
			$sql = "select link_id from links where refurl='$url2'"; 
			$sth1 = $global_dbh->prepare($sql);
			$sth1->execute();
			if (($link_id) = $sth1->fetchrow_array())
			{
				$sth1->finish();
			}
			else
			{
				$sth1->finish();
    			$sql = "insert into links(refurl,date_added) values ('$url2',now())";
    			my $rows = $global_dbh->do($sql);
				$sql = "select max(link_id) from links where refurl='$url2'"; 
				$sth1 = $global_dbh->prepare($sql);
				$sth1->execute();
				($link_id) = $sth1->fetchrow_array();
				$sth1->finish();
				$global_added = 1;
			}
			$url2 =~ s/\?/\\?/g;
			$global_text =~ s/$url2/http:\/\/{{SUB_DOMAIN}}\/cgi-bin\/redir.cgi?cid={{CID}}&eid={{EMAIL_USER_ID}}&id=$link_id/gi;
		}
	 }
	 #
	 # Process image tags
	 #
     elsif ($tag eq "img")
     {
        $_ = $url2;
        if ((/DOMAIN/) || ( /www.affiliateimages/ ) || (/IMG_DOMAIN/))
        {
            my $nomove= 1;
        }
        else
        {
            #
            # Get directory and filename
            #
            open HEAD, "> /var/www/util/logs/head.out";
			print HEAD "$url2\n";
            ($scheme, $auth, $path, $query, $frag) = uri_split($url2);
            ($name,$frag,$suffix) = fileparse($path);
			print HEAD "$url2\n";
            my $repl_url = $scheme . "://" . $auth . $frag . $name;
            print HEAD "URL = <$repl_url>\n";
            print HEAD "Name = <$name>\n";
            print HEAD "Suffix = <$suffix>\n";
			print HEAD "Img Count = $img_cnt\n";
            my $curl = WWW::Curl::easy->new();
            $curl->setopt(CURLOPT_NOPROGRESS, 1);
            $curl->setopt(CURLOPT_MUTE, 0);
            $curl->setopt(CURLOPT_FOLLOWLOCATION, 1);
            $curl->setopt(CURLOPT_TIMEOUT, 30);
            $curl->setopt(CURLOPT_WRITEHEADER, *HEAD);
			$img_cnt++;
			($temp_name,$temp_str) = split '\.',$name;
			$temp_name = "img_" . $img_cnt . "." . $temp_str;
            open BODY, "> /var/www/util/tmpimg/$temp_name";
            $curl->setopt(CURLOPT_FILE,*BODY);
            $curl->setopt(CURLOPT_URL, $url2);
            my $retcode=$curl->perform();
            if ($retcode == 0)
            {
            }
            else
            {
   # We can acces the error message in $errbuf here
#    print STDERR "$retcode / ".$curl->errbuf."\n";
    print "not ";
            }
            close HEAD;
            $global_text =~ s/$repl_url/http:\/\/{{IMG_DOMAIN}}\/images\/img_{{CID}}\/$temp_name/gi;
        }
	}
}

1;
